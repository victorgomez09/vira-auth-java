version: '3.9'

services:
  zookeeper:
    container_name: vira-zookeeper
    image: zookeeper:3.6.3
    ports:
      - "2181:2181"

  kafka:
    container_name: vira-kafka
    image: bitnami/kafka:3.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - kafka

  postgres_auth:
    container_name: vira-postgres-auth
    image: postgres:14-alpine
    volumes:
      - ~/apps/postgres/auth:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=vira_auth
    networks:
      - postgres
    ports:
      - 5433:5432

  postgres_docs:
    container_name: vira-postgres-docs
    image: postgres:14-alpine
    volumes:
      - ~/apps/postgres/docs:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=vira_docs
    networks:
      - postgres
    ports:
      - 5434:5432

  postgres_users:
    container_name: vira-postgres-user
    image: postgres:14-alpine
    volumes:
      - ~/apps/postgres/user:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=vira_users
    networks:
      - postgres
    ports:
      - 5435:5432

  config-server:
    container_name: vira-config-server
    build: config-server/
    ports:
      - 8888:8888
    networks:
      - spring
    healthcheck:
      test: curl --fail http://vira-config-server:8888/eureka-server.properties || exit 1
      interval: 3s
      timeout: 5s
      retries: 5

  eureka-server:
    container_name: vira-eureka-server
    build: eureka-server/
    ports:
      - 8081:8081
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - spring
    healthcheck:
      test: curl --fail http://vira-config-server:8888/eureka-server.properties || exit 1
      interval: 3s
      timeout: 5s
      retries: 5

  gateway-server:
    container_name: vira-gateway-server
    build: api-gateway/
    ports:
      - 8082:8082
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - spring
    healthcheck:
      test: curl --fail http://vira-eureka-server:8081/ || exit 1
      interval: 3s
      timeout: 5s
      retries: 5
  # auth-server:
  #   container_name: vira-auth-server
  #   build: auth-service/
  #   depends_on:
  #     eureka-server:
  #       condition: service_healthy
  #   networks:
  #     - spring
  #     - postgres
  #     - kafka
  #   healthcheck:
  #     test: curl --fail http://vira-eureka-server:8081/ || exit 1
  #     interval: 3s
  #     timeout: 5s
  #     retries: 5

  # user-server:
  #   container_name: vira-user-server
  #   build: user-service/
  #   depends_on:
  #     eureka-server:
  #       condition: service_healthy
  #   networks:
  #     - spring
  #     - postgres
  #     - kafka

  #   healthcheck:
  #     test: curl --fail http://vira-eureka-server:8081/ || exit 1
  #     interval: 3s
  #     timeout: 5s
  #     retries: 5
  # doc-server:
  #   container_name: vira-docs-server
  #   build: docs-service/
  #   networks:
  #     - spring
  #     - kafka
  #     - postgres
  #   depends_on:
  #     eureka-server:
  #       condition: service_healthy

networks:
  kafka:
    driver: bridge
  postgres:
    driver: bridge
  spring:
    driver: overlay
